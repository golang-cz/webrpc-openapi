{{- define "main" -}}

{{- /* Options with default values. */ -}}
{{- $opts := dict -}}
{{- set $opts "title" (default .Opts.title (print (index .Services 0).Name " API")) -}}
{{- set $opts "apiVersion" (default .Opts.apiVersion "") -}}
{{- set $opts "serverUrl" (default .Opts.serverUrl "") -}}
{{- set $opts "serverDescription" (default .Opts.serverDescription "") -}}

{{- /* Print help on -help. */ -}}
{{- if exists .Opts "help" -}}
  {{- template "help" $opts -}}
  {{- exit 0 -}}
{{- end -}}

{{- /* Print help on unsupported option. */ -}}
{{- range $k, $v := .Opts }}
  {{- if not (exists $opts $k) -}}
    {{- stderrPrintf "-%v=%q is not supported target option\n\nUsage:\n" $k $v -}}
    {{- template "help" $opts -}}
    {{- exit 1 -}}
  {{- end -}}
{{- end -}}

{{- if ne .WebrpcVersion "v1" -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc version %s\n" .WebrpcTarget .WebrpcVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- if not (minVersion .WebrpcGenVersion "v0.7.0") -}}
  {{- stderrPrintf "%s generator error: unsupported webrpc-gen version %s, please update\n" .WebrpcTarget .WebrpcGenVersion -}}
  {{- exit 1 -}}
{{- end -}}

{{- /* Type mapping. */ -}}
{{- $typeMap := dict }}
{{- set $typeMap "null" "null" -}}
{{- set $typeMap "any" "object" -}}
{{- set $typeMap "byte" "string" -}}
{{- set $typeMap "bool" "boolean" -}}
{{- set $typeMap "uint" "number" -}}
{{- set $typeMap "uint8" "number" -}}
{{- set $typeMap "uint16" "number" -}}
{{- set $typeMap "uint32" "number" -}}
{{- set $typeMap "uint64" "number" -}}
{{- set $typeMap "int" "number" -}}
{{- set $typeMap "int8" "number" -}}
{{- set $typeMap "int16" "number" -}}
{{- set $typeMap "int32" "number" -}}
{{- set $typeMap "int64" "number" -}}
{{- set $typeMap "float32" "number" -}}
{{- set $typeMap "float64" "number" -}}
{{- set $typeMap "string" "string" -}}
{{- set $typeMap "timestamp" "string" -}}
{{- set $typeMap "map" "object" -}}
{{- set $typeMap "[]" "array" -}}

{{- $types := .Types -}}
{{- $services := .Services -}}

# {{.SchemaName}} {{.SchemaVersion}} {{.SchemaHash}}
# --
# Code generated by webrpc-gen@{{.WebrpcGenVersion}} with {{.WebrpcTarget}} generator; DO NOT EDIT
# 
# {{.WebrpcGenCommand}}
openapi: 3.0.0
info:
  title: '{{ get $opts "title" }}'
  version: '{{ get $opts "apiVersion" }}'
{{ if or (exists $opts "serverUrl") (exists $opts "serverDescription") -}}
servers:
  - url: '{{ get $opts "serverUrl" }}'
    description: '{{ get $opts "serverDescription" }}'
{{ end -}}
components:
  schemas:
    empty:
      type: object
    error:
      properties:
        error:
          type: string
    {{- range $_, $type := $types }}
    {{template "type" dict "Type" $type "TypeMap" $typeMap }}
    {{- end -}}
    {{- range $_, $service := $services}}
    {{- range $i, $method := $service.Methods}}
    {{$method.Name}}_Request:
      {{if gt (len .Inputs) 0}}properties:{{else}}type: object{{end}}
      {{- range $_, $input := $method.Inputs}}
        {{$input.Name}}:
          {{ template "fieldType" dict "Type" $input.Type "TypeMap" $typeMap "Indent" "          " }}
      {{- end -}}
    {{- end -}}
    {{- range $_, $method := .Methods}}
    {{$method.Name}}_Response:
      {{if gt (len $method.Outputs) 0}}properties:{{else}}type: object{{end}}
      {{- range $_, $output := .Outputs}}
        {{$output.Name}}:
          {{ template "fieldType" dict "Type" $output.Type "TypeMap" $typeMap "Indent" "          " }}
        {{- end -}}
      {{- end -}}
    {{- end}}

paths:
{{- range $_, $service := .Services -}}
  {{- range $_, $method := .Methods}}
  /rpc/{{$service.Name}}/{{$method.Name}}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/{{$method.Name}}_Request'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/{{$method.Name}}_Response'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  {{- end -}}
{{- end -}}
{{- end -}}
