# example v0.0.1 8c962b82639c77d8c62f134f5c009611f35c7f8f
# --
# Code generated by webrpc-gen@v0.11.2 with custom generator; DO NOT EDIT
# 
# webrpc-gen -schema=./proto.ridl -target=../ -out=./openapi.gen.yaml -title=Example webrpc API -apiVersion=v22.11.8 -serverUrl=https://api.example.com -serverDescription=Production
openapi: 3.0.0
info:
  title: 'Example webrpc API'
  version: 'v22.11.8'
servers:
  - url: 'https://api.example.com'
    description: 'Production'
components:
  schemas:
    ErrorWebrpcEndpoint:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcEndpoint"
        code:
          type: number
          example: 0
        msg:
          type: string
          example: "endpoint error"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcRequestFailed:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcRequestFailed"
        code:
          type: number
          example: -1
        msg:
          type: string
          example: "request failed"
        cause:
          type: string
        status:
          type: number
          example: 0
    ErrorWebrpcBadRoute:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRoute"
        code:
          type: number
          example: -2
        msg:
          type: string
          example: "bad route"
        cause:
          type: string
        status:
          type: number
          example: 404
    ErrorWebrpcBadMethod:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadMethod"
        code:
          type: number
          example: -3
        msg:
          type: string
          example: "bad method"
        cause:
          type: string
        status:
          type: number
          example: 405
    ErrorWebrpcBadRequest:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadRequest"
        code:
          type: number
          example: -4
        msg:
          type: string
          example: "bad request"
        cause:
          type: string
        status:
          type: number
          example: 400
    ErrorWebrpcBadResponse:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcBadResponse"
        code:
          type: number
          example: -5
        msg:
          type: string
          example: "bad response"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorWebrpcServerPanic:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "WebrpcServerPanic"
        code:
          type: number
          example: -6
        msg:
          type: string
          example: "server panic"
        cause:
          type: string
        status:
          type: number
          example: 500
    ErrorRateLimited:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "RateLimited"
        code:
          type: number
          example: 100
        msg:
          type: string
          example: "too many requests"
        cause:
          type: string
        status:
          type: number
          example: 429
    ErrorDatabaseDown:
      type: object
      required:
        - error
        - code
        - msg
        - status
      properties:
        error:
          type: string
          example: "DatabaseDown"
        code:
          type: number
          example: 101
        msg:
          type: string
          example: "service outage"
        cause:
          type: string
        status:
          type: number
          example: 503
    Kind:
      type: string
      description: Represented as uint32 on the server side
      enum:
        - USER
        - ADMIN
    User:
      type: object
      properties:
        id:
          type: number
        username:
          type: string
        role:
          type: string
    SearchFilter:
      type: object
      properties:
        q:
          type: string
    Version:
      type: object
      properties:
        webrpcVersion:
          type: string
        schemaVersion:
          type: string
        schemaHash:
          type: string
    ComplexType:
      type: object
      properties:
        meta:
          type: object
          description: 'map<string,any>'
          additionalProperties:
            type: object
        metaNestedExample:
          type: object
          description: 'map<string,map<string,uint32>>'
          additionalProperties:
            type: object
            description: 'map<string,uint32>'
            additionalProperties:
              type: number
        namesList:
          type: array
          description: '[]string'
          items:
            type: string
        numsList:
          type: array
          description: '[]int64'
          items:
            type: number
        doubleArray:
          type: array
          description: '[][]string'
          items:
            type: array
            description: '[]string'
            items:
              type: string
        listOfMaps:
          type: array
          description: '[]map<string,uint32>'
          items:
            type: object
            description: 'map<string,uint32>'
            additionalProperties:
              type: number
        listOfUsers:
          type: array
          description: '[]User'
          items:
            type: object
            $ref: '#/components/schemas/User'
        mapOfUsers:
          type: object
          description: 'map<string,User>'
          additionalProperties:
            type: object
            $ref: '#/components/schemas/User'
        user:
          type: object
          $ref: '#/components/schemas/User'
    GetUser_Request:
      type: object
      properties:
        header:
          type: object
          description: 'map<string,string>'
          additionalProperties:
            type: string
        userID:
          type: number
    FindUser_Request:
      type: object
      properties:
        s:
          type: object
          $ref: '#/components/schemas/SearchFilter'
    ListUsers_Request:
      type: object
    GetComplex_Request:
      type: object
    GetUser_Response:
      type: object
      properties:
        code:
          type: number
        user:
          type: object
          $ref: '#/components/schemas/User'
    FindUser_Response:
      type: object
      properties:
        name:
          type: string
        user:
          type: object
          $ref: '#/components/schemas/User'
    ListUsers_Response:
      type: object
      properties:
        users:
          type: array
          description: '[]User'
          items:
            type: object
            $ref: '#/components/schemas/User'
    GetComplex_Response:
      type: object
      properties:
        complex:
          type: object
          $ref: '#/components/schemas/ComplexType'

paths:
  /rpc/ExampleService/GetUser:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUser_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUser_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                - $ref: '#/components/schemas/ErrorRateLimited'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                - $ref: '#/components/schemas/ErrorDatabaseDown'
  /rpc/ExampleService/FindUser:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindUser_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindUser_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                - $ref: '#/components/schemas/ErrorRateLimited'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                - $ref: '#/components/schemas/ErrorDatabaseDown'
  /rpc/ExampleService/ListUsers:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsers_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsers_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                - $ref: '#/components/schemas/ErrorRateLimited'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                - $ref: '#/components/schemas/ErrorDatabaseDown'
  /rpc/ExampleService/GetComplex:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetComplex_Request'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetComplex_Response'
        '4XX':
          description: Client error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcEndpoint'
                - $ref: '#/components/schemas/ErrorWebrpcBadRoute'
                - $ref: '#/components/schemas/ErrorWebrpcBadMethod'
                - $ref: '#/components/schemas/ErrorWebrpcBadRequest'
                - $ref: '#/components/schemas/ErrorRateLimited'
        '5XX':
          description: Server error
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ErrorWebrpcBadResponse'
                - $ref: '#/components/schemas/ErrorWebrpcServerPanic'
                - $ref: '#/components/schemas/ErrorDatabaseDown'